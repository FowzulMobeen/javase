
SavingsAccount.java
====================
public class SavingsAccount {
	private int acno;
	private String customer;
	private double balance;
    private static int minBalance = 5000;
    
    public SavingsAccount(int acno, String customer, double balance) {
		super();
		this.acno = acno;
		this.customer = customer;
		this.balance = balance;
	}

    public int getAcno() {
    	return acno;
    }
    
	public SavingsAccount(int acno, String customer) {
		super();
		this.acno = acno;
		this.customer = customer;
	}
	
	public static int getMinBalance() {
		return minBalance; 
	}
	
	public double getBalance() {
		return balance;
	}
	
	public void deposit(double amount) {
		this.balance += amount;
	}
	
	public void withdraw(double amount) {
		if ( balance - minBalance >= amount)
		      this.balance += amount;
	}

	@Override
	public String toString() {
		return "SavingsAccount [acno=" + acno + ", customer=" + customer + ", balance=" + balance + "]";
	}
}

SortAccounts.java
===========================

import java.util.Arrays;
import java.util.Comparator;

public class SortAccounts {

	public static void main(String[] args) {
		SavingsAccount accounts[] = { new SavingsAccount(2, "Abc",1000), 
				                      new SavingsAccount(3, "Xyz",12000),
				                      new SavingsAccount(1, "Pqr",50000), };
		Arrays.sort(accounts, new CompareAccounts());

		for (SavingsAccount s : accounts)
			System.out.println(s);

		Arrays.sort(accounts, new CompareBalance());

		for (SavingsAccount s : accounts)
			System.out.println(s);
	}

	static class CompareAccounts implements Comparator<SavingsAccount> {

		@Override
		public int compare(SavingsAccount s1, SavingsAccount s2) {
			return s1.getAcno() - s2.getAcno();
		}

	}

	static class CompareBalance implements Comparator<SavingsAccount> {

		@Override
		public int compare(SavingsAccount s1, SavingsAccount s2) {
			if (s1.getBalance() > s2.getBalance())
				return 1;
			else
				if ( s1.getBalance() < s2.getBalance())
					return -1;
				else
					return 0;
						
		}

	}

}

